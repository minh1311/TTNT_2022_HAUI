{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"p-b06LI7vE5S","executionInfo":{"status":"ok","timestamp":1670567814886,"user_tz":-420,"elapsed":1248,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}}},"outputs":[],"source":["\n","import numpy as np\n","#loading dataset\n","import pandas as pd\n","#visualisation\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","\n","from sklearn.tree import DecisionTreeClassifier\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score"]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gJ2cPdb24pBx","executionInfo":{"status":"ok","timestamp":1670567849639,"user_tz":-420,"elapsed":31270,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}},"outputId":"7033884e-c28d-4077-8587-1ebe2172a5fa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/MyDrive/Colab Notebooks/TTNT_2022\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","\n","%cd '/content/gdrive/MyDrive/Colab Notebooks/TTNT_2022'\n","\n"]},{"cell_type":"code","source":["data = pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/TTNT_2022/heart2.csv')\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"dcZba5bfRRrQ","executionInfo":{"status":"ok","timestamp":1670567852756,"user_tz":-420,"elapsed":1047,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}},"outputId":"a2903348-693a-4a2b-c678-643bc7c77491"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   age  sex  cp  trestbps  chol  fbs  restecg  thalach  exang  oldpeak  slope  \\\n","0   52    1   0       125   212    0        1      168      0      1.0      2   \n","1   53    1   0       140   203    1        0      155      1      3.1      0   \n","2   70    1   0       145   174    0        1      125      1      2.6      0   \n","3   61    1   0       148   203    0        1      161      0      0.0      2   \n","4   62    0   0       138   294    1        1      106      0      1.9      1   \n","\n","   ca  thal  target  \n","0   2     3       0  \n","1   0     3       0  \n","2   0     3       0  \n","3   1     3       0  \n","4   3     2       0  "],"text/html":["\n","  <div id=\"df-ef66c178-b736-4af6-87f3-a143645c6dfc\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>age</th>\n","      <th>sex</th>\n","      <th>cp</th>\n","      <th>trestbps</th>\n","      <th>chol</th>\n","      <th>fbs</th>\n","      <th>restecg</th>\n","      <th>thalach</th>\n","      <th>exang</th>\n","      <th>oldpeak</th>\n","      <th>slope</th>\n","      <th>ca</th>\n","      <th>thal</th>\n","      <th>target</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>52</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>125</td>\n","      <td>212</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>168</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>53</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>140</td>\n","      <td>203</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>155</td>\n","      <td>1</td>\n","      <td>3.1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>70</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>145</td>\n","      <td>174</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>125</td>\n","      <td>1</td>\n","      <td>2.6</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>61</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>148</td>\n","      <td>203</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>161</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>138</td>\n","      <td>294</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>106</td>\n","      <td>0</td>\n","      <td>1.9</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ef66c178-b736-4af6-87f3-a143645c6dfc')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-ef66c178-b736-4af6-87f3-a143645c6dfc button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-ef66c178-b736-4af6-87f3-a143645c6dfc');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":3}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iZKI671N7YDp"},"outputs":[],"source":["\n","from google.colab import files\n","uploaded = files.upload()\n","\n","data = pd.read_csv('heart2.csv')\n","data.head()"]},{"cell_type":"code","source":["# #Xử lý dữ liệu trống\n","# #xóa các ô dữ liệu trống\n","data.dropna(inplace = True)# Xóa luôn\n","\n","#Xử lý dữ liệu trùng lặp\n","data.drop_duplicates(inplace = True)\n"],"metadata":{"id":"nBbcTmdILNp4","executionInfo":{"status":"ok","timestamp":1670567858013,"user_tz":-420,"elapsed":718,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9,"status":"ok","timestamp":1669989462687,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"},"user_tz":-420},"id":"kaykspX32zqt","outputId":"a1661ed2-861f-4f34-9463-66b3527f5c5f"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 302 entries, 0 to 878\n","Data columns (total 14 columns):\n"," #   Column    Non-Null Count  Dtype  \n","---  ------    --------------  -----  \n"," 0   age       302 non-null    int64  \n"," 1   sex       302 non-null    int64  \n"," 2   cp        302 non-null    int64  \n"," 3   trestbps  302 non-null    int64  \n"," 4   chol      302 non-null    int64  \n"," 5   fbs       302 non-null    int64  \n"," 6   restecg   302 non-null    int64  \n"," 7   thalach   302 non-null    int64  \n"," 8   exang     302 non-null    int64  \n"," 9   oldpeak   302 non-null    float64\n"," 10  slope     302 non-null    int64  \n"," 11  ca        302 non-null    int64  \n"," 12  thal      302 non-null    int64  \n"," 13  target    302 non-null    int64  \n","dtypes: float64(1), int64(13)\n","memory usage: 35.4 KB\n"]}],"source":["data.info()"]},{"cell_type":"markdown","source":["\n","1.   age\n","2.   sex\n","3.   chest pain type (4 values)\n","4.   resting blood pressure\n","5.   serum cholestoral in mg/dl\n","6.   fasting blood sugar > 120 mg/dl\n","7.   resting electrocardiographic results (values 0,1,2)\n","8.   maximum heart rate achieved\n","9.   exercise induced angina\n","10.  oldpeak = ST depression induced by exercise relative to rest\n","11.   the slope of the peak exercise ST segment\n","12.   number of major vessels (0-3) colored by flourosopy\n","13.   thal: 0 = normal; 1 = fixed defect; 2 = reversable defect\n","\n","\n","\n"],"metadata":{"id":"eC4vbWLBPUsA"}},{"cell_type":"markdown","source":["1. Tuổi\n","2. Giới tính\n","3. Loại đau ngực\n","4. Huyết áp khi nghỉ ngơi\n","5. cholestoral huyết thanh tính bằng mg/dl\n","6. đường huyết lúc đói > 120 mg/dl\n","7. kết quả điện tâm đồ lúc nghỉ (giá trị 0,1,2)\n","8. nhịp tim tối đa đạt được\n","9. exercise induced angina\n","10. oldpeak = ST chênh xuống do gắng sức so với nghỉ ngơi\n","11. độ dốc của đoạn ST tập thể dục đỉnh\n","12. số lượng tàu chính được tô màu\n","13. thal: 0 = bình thường; 1 = lỗi cố định; 2 = khiếm khuyết có thể đảo ngược"],"metadata":{"id":"MXlpvYjqQYC-"}},{"cell_type":"markdown","source":[],"metadata":{"id":"jhqdb96pPdrL"}},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":513},"executionInfo":{"elapsed":756,"status":"ok","timestamp":1668762313220,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"},"user_tz":-420},"id":"EOqaybaQKxc1","outputId":"1efd05df-3dd1-488f-dadd-d6d27cdcc6d7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.scatter(X['age'],y)\n","plt.show()\n","plt.scatter(X['ca'],y)\n","plt.show()\n","plt.scatter(X['sex'],y)\n","plt.show()\n","plt.scatter(X['cp'],y)\n","plt.show()\n","plt.scatter(X['fbs'],y)\n","plt.show()\n","plt.scatter(X['restecg'],y)\n","plt.show()\n","plt.scatter(X['chol'],X['age'])\n","plt.show()"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"EgECGwqf20pC","executionInfo":{"status":"ok","timestamp":1670567863515,"user_tz":-420,"elapsed":11,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}}},"outputs":[],"source":["y = data[\"target\"]\n","X = data.drop('target',axis=1)\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.20, random_state = 0)\n","\n","\n","\n"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":11,"status":"ok","timestamp":1670567865988,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"},"user_tz":-420},"id":"Jmqhup7y3EiV","outputId":"cce6cc66-f7a9-4e3b-e198-5d3e4492ce00"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 1 1 1 1 0 1 1 1 0 0 1 0 1 1 0 0 1 1 0 1 1 1 1 0 0 1 1 0 1 0 0 1 0 1 1 1\n"," 1 1 1 1 1 0 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 1]\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/linear_model/_logistic.py:814: ConvergenceWarning: lbfgs failed to converge (status=1):\n","STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n","\n","Increase the number of iterations (max_iter) or scale the data as shown in:\n","    https://scikit-learn.org/stable/modules/preprocessing.html\n","Please also refer to the documentation for alternative solver options:\n","    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n","  n_iter_i = _check_optimize_result(\n"]}],"source":["m1 = 'Logistic Regression'\n","lr = LogisticRegression()\n","model = lr.fit(X_train, y_train)\n","lr_predict = lr.predict(X_test)\n","print(lr_predict)\n","\n"]},{"cell_type":"code","source":["lr_acc_score = accuracy_score(y_test, lr_predict)\n","\n","print(\"\\n\")\n","print(\"Accuracy of Logistic Regression:\",lr_acc_score*100,'\\n')"],"metadata":{"id":"R6jtCD-DAIv9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["encode={0:'Khong bi dau tim',1:'Co kha nang bi dau tim'}\n","for i in lr_predict:\n","  list_ans.append(encode[i])\n","list_ans"],"metadata":{"id":"p5MGRApVJTrQ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#nhập với đầu vào tự cho\n","ans=lr.predict([[1,1,1,1,1,1,1,1,1,1,1,1,1]])\n","encode={0:'Khong bi dau tim',1:'Co kha nang bi dau tim'}\n","print('Du doan cua Logistic Regression: ',encode[ans[0]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0iO1v_EjWoK7","executionInfo":{"status":"ok","timestamp":1670567880719,"user_tz":-420,"elapsed":624,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}},"outputId":"f14246fe-0a68-4c99-9fe6-6c51a48d5966"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Du doan cua Logistic Regression:  Khong bi dau tim\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n","  warnings.warn(\n"]}]},{"cell_type":"code","execution_count":10,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":492,"status":"ok","timestamp":1670567932273,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"},"user_tz":-420},"id":"TmQlF20FJJ4J","outputId":"a2f31460-e06f-48a3-b6fa-8e626e1b09a8"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1 1 0 1 1 0 0 0 1 0 0 0 0 1 1 0 0 1 1 0 0 1 1 1 0 1 1 1 0 1 1 0 1 0 1 1 1\n"," 1 1 1 1 1 0 1 0 1 0 1 0 0 1 1 1 0 1 1 0 0 1 1 1]\n"]}],"source":["m2 = 'DecisionTreeClassifier'\n","#criterion có hai giá trị\n","#   +gini : Gini Impurity là chỉ số thể hiện mức độ phân loại sai khi ta chọn ngẫu nhiên một phần tử từ tập data\n","#   +entropy : Độ bất định (độ phatrộn/độ hỗn tạp)\n","dt = DecisionTreeClassifier(criterion = 'entropy')\n","dt.fit(X_train, y_train)\n","dt_predicted = dt.predict(X_test)\n","print(dt_predicted)"]},{"cell_type":"code","source":["dt_acc_score = accuracy_score(y_test, dt_predicted)\n","print(\"Accuracy of DecisionTreeClassifier:\",dt_acc_score*100,'\\n')"],"metadata":{"id":"UiGfZbbyARZz"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","encode={0:'Khong bi dau tim',1:'Co kha nang bi dau tim'}\n","for i in dt_predicted:\n","  list_ans_ID3.append(encode[i])\n","list_ans_ID3"],"metadata":{"id":"93Ylpdy3gtnn"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#nhập với đầu vào tự cho\n","ans=dt.predict([[1,1,1,1,1,1,1,1,1,1,1,1,1]])\n","encode={0:'Khong bi dau tim',1:'Co kha nang bi dau tim'}\n","print('Du doan cua Decision Tree Classifier: ',encode[ans[0]])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AxovXvdwg8oT","executionInfo":{"status":"ok","timestamp":1670567935588,"user_tz":-420,"elapsed":16,"user":{"displayName":"42 Nguyễn Hoàng Minh","userId":"06144627316678206533"}},"outputId":"a99f54f0-284e-4055-982f-f2a5be9873bc"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["Du doan cua Decision Tree Classifier:  Co kha nang bi dau tim\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/base.py:450: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names\n","  warnings.warn(\n"]}]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"authorship_tag":"ABX9TyOhBjuk20RCK9PaoQag+3Xc"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}